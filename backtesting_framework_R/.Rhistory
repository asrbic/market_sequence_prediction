setwd("~/views/market_sequence_prediction/backtesting_framework")
.Random.seed(7)
.Random.seed <- 7
set.seed(7)
set.seed()
rm(".Random.seed")
set.seed(7)
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
#Code, Date, Open, High, Low, Close, Volume.
library(data.table)
main()
readCSVMarketData <- function(dir="/home/asrbic/views/market_sequence_prediction/test_data/data/") {
allFileNames <- list.files(dir)
colNames <- c("Code","Date","Open","High","Low","Close","Volume")
all <- lapply(allFileNames, FUN = readSingleCSV, dir, colNames)
}
readSingleCSV <- function(fileName, dir, colNames) {
singleCSV <- read.csv(paste0(dir, fileName), header=FALSE, col.names = colNames)
}
main <- function() {
#rbindlist
set.seed(7)
marketDataByInterval <- readCSVMarketData()
holdings <- data.frame(row.names = c("Symbol", "Price", "Quantity", "Direction"))
cash <- 0
for(interval in marketDataByInterval) {
actions <- simulateInterval(interval)
result <- takeActions(actions, interval, cash, holdings)
holdings <- result$holdings
cash <- result$cash
}
#determine profit/loss given action dictated by indicators
print(cash)
holdings
}
takeActions <- function(actions, interval, cash, holdings) {
list("holdings" = holdings, "cash" = cash)
}
simulateInterval <- function(interval) {
#generate HTM features
#this feature set should simulate one timeIndex in the TP
#as if all the previous timeIndexes had taken place
#might have to persist HTM state in another thread or something fancy
#classify features
#determine indicator (buy/sell/hold)
#for now just randomly decide what to do
rnd <- runif(nrow(interval), 0, 20)
action <- lapply(rnd, randActionSelector)
# -1 SELL | 0 HOLD | 1 BUY
}
randActionSelector <- function(num) {
if(num < 1) {
-1 #SELL
}
else if (num > 19) {
1 #BUY
}
else {
0 #HOLD
}
}
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
View(holdings)
View(holdings)
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
asdf <- interval[colnames(interval)]
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
actionsRequired[1]
asdf <- actionsRequired[1]
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
source('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
main()
actionsRequired[is.null(actionsRequired)]
asdf <- actionsRequired[is.null(actionsRequired)]
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
asdf <- actionsRequired[!is.null(actionsRequired)]
asdf <- actionsRequired[!lapply(is.null, actionsRequired)]
asdf <- actionsRequired[!lapply(actionsRequired, is.null)]
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
asdf <- actionsRequired[!lapply(actionsRequired, is.null)]
main()
asdf <- actionsRequired[!lapply(actionsRequired, is.null)]
asdf <- actionsRequired[lapply(actionsRequired, is.null)]
asdf <- actionsRequired[!unlist(lapply(actionsRequired, is.null))]
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
asdf <- actionsRequired[c('symbol', 'direction')] %in% openPositions[,c('symbol', 'direction')]
asdf <- actionsRequired[c('symbol', 'direction')] %in% openPositions[c('symbol', 'direction')]
asdf <- actionsRequired[c('symbol', 'direction')] %in% openPositions[c('symbol', 'direction')]
asdf <- openPositions[,c('symbol', 'direction')]
asdf <- openPositions[,c('symbol', 'direction')]
asdf <- openPositions[c('symbol', 'direction')]
colnames(openPositions)
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
asdf <- data.frame(c("symbol", "price", "quantity", "direction"))
View(asdf)
asdf <- data.frame(c("symbol"=NULL, "price"=NULL, "quantity"=NULL, "direction"=NULL))
View(asdf)
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
asdf <- openPositions[,c('symbol', 'direction')]
View(openPositions)
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
asdf <- openPositions[,c('symbol', 'direction')]
View(asdf)
View(openPositions)
asdf <- actionsRequired[c('symbol', 'direction')] %in% openPositions[,c('symbol', 'direction')]
qwer <- actionsRequired[c('symbol', 'direction')]
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
asdf <- actionsRequired[,c('symbol', 'direction')] %in% openPositions[,c('symbol', 'direction')]
main()
asdf <- actionsRequired[,c('symbol', 'direction')] %in% openPositions[,c('symbol', 'direction')]
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
asdf <- actionsRequired[,c('symbol', 'direction')] %in% openPositions[,c('symbol', 'direction')]
qwer <- actionsRequired[,c('symbol', 'direction')]
qwer <- actionsRequired[c('symbol', 'direction')]
actionsRequired$direction
actionsRequired[direction]
actionsRequired['direction']
actionsRequired[,'direction']
actionsRequired[[,'direction']]
actionsRequired[,'direction']
actionsRequired[,'direction']
actionsRequired[[,1]]
actionsRequired[,1]
actionsRequired[,2]
actionsRequired[,3]
actionsRequired[,4]
actionsRequired[,5]
actionsRequired[,6]
openPositions[,1]
openPositions[,2]
openPositions[,3]
debugSource('~/views/market_sequence_prediction/backtesting_framework/btf.R')
main()
asdf <- actionsRequired[,c('symbol', 'direction')]
View(asdf)
asdf <- actionsRequired[,c('symbol', 'direction')] %in% openPositions[,c('symbol', 'direction')]
